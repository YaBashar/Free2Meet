name: CI Tests

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    # Define a service container for MongoDB
    services:
      mongodb:
        # Use the official MongoDB Docker image
        image: mongo:latest
        # Map port 27017 inside the container
        ports:
          - 27017:27017
        # Define environment variables if needed (e.g., for auth)
        options: >-
          --name mongodb_server
          --health-cmd "mongo --eval 'db.runCommand({ping: 1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    container:
      image: node:20

    steps:
      - uses: actions/checkout@v3

      - name: Write config.json from secret
        working-directory: ./backend/src
        run: |
          echo "$CONFIG_JSON" > config.json
        env:
          CONFIG_JSON: ${{ secrets.CONFIG_JSON }}

      - name: Install dependencies
        working-directory: ./backend
        run: npm install

      - name: Run tests
        working-directory: ./backend
        env: 
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}
          INVITATION_SECRET: ${{ secrets.JWT_INVITATION_SECRET }}
          MONGODB_URI: mongodb://mongo_ci:27017/ci_database_name
        run: |
          npm start &
          SERVER_PID=$!
          timeout 10s bash -c 'until curl -s http://localhost:3228 > /dev/null; do sleep 1; done'

          # Run the tests
          npm test

          # Kill the server process
          kill $SERVER_PID